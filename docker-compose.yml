services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: papercrate
      POSTGRES_PASSWORD: papercrate_dev
      POSTGRES_DB: papercrate
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U papercrate"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"  # S3 API
      - "9001:9001"  # Console
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  createbuckets:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/documents --ignore-existing;
      /usr/bin/mc anonymous set download myminio/documents;
      exit 0;
      "

  quickwit:
    image: quickwit/quickwit:0.8.2
    command: ["run"]
    environment:
      QW_ENABLE_API_AUTH: "false"
      QW_DATA_DIR: /quickwit/data
    ports:
      - "7280:7280"
    volumes:
      - quickwit_data:/quickwit/data
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://127.0.0.1:7280/api/v1/version"]
      interval: 10s
      timeout: 5s
      retries: 5

  quickwit-create-index:
    image: quickwit/quickwit:0.8.2
    depends_on:
      quickwit:
        condition: service_healthy
    volumes:
      - quickwit_data:/quickwit/data
      - ./quickwit/documents-index.yaml:/tmp/documents-index.yaml:ro
    command: index create --endpoint=http://quickwit:7280 --index-config /tmp/documents-index.yaml
    restart: "no"

volumes:
  postgres_data:
  minio_data:
  quickwit_data:
